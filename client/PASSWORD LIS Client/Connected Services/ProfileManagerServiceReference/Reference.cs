//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PASSWORD_LIS_Client.ProfileManagerServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProfileManagerServiceReference.IProfileManager")]
    public interface IProfileManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileManager/UpdateAvatar", ReplyAction="http://tempuri.org/IProfileManager/UpdateAvatarResponse")]
        bool UpdateAvatar(int playerId, int newPhotoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileManager/UpdateAvatar", ReplyAction="http://tempuri.org/IProfileManager/UpdateAvatarResponse")]
        System.Threading.Tasks.Task<bool> UpdateAvatarAsync(int playerId, int newPhotoId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfileManagerChannel : PASSWORD_LIS_Client.ProfileManagerServiceReference.IProfileManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfileManagerClient : System.ServiceModel.ClientBase<PASSWORD_LIS_Client.ProfileManagerServiceReference.IProfileManager>, PASSWORD_LIS_Client.ProfileManagerServiceReference.IProfileManager {
        
        public ProfileManagerClient() {
        }
        
        public ProfileManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProfileManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UpdateAvatar(int playerId, int newPhotoId) {
            return base.Channel.UpdateAvatar(playerId, newPhotoId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAvatarAsync(int playerId, int newPhotoId) {
            return base.Channel.UpdateAvatarAsync(playerId, newPhotoId);
        }
    }
}
